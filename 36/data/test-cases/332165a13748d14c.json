{"uid":"332165a13748d14c","name":"test_header_profile_button","fullName":"hw.code.test_header.TestHeader#test_header_profile_button","historyId":"702f60363889f173e30d154cd2ad9017","time":{"start":1683813634677,"stop":1683813635855,"duration":1178},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x56278e82c133 <unknown>\n#1 0x56278e560966 <unknown>\n#2 0x56278e59e5b6 <unknown>\n#3 0x56278e5933ea <unknown>\n#4 0x56278e5bcbd2 <unknown>\n#5 0x56278e592d13 <unknown>\n#6 0x56278e5bcd9e <unknown>\n#7 0x56278e5d51c7 <unknown>\n#8 0x56278e5bc9a3 <unknown>\n#9 0x56278e59146a <unknown>\n#10 0x56278e59255e <unknown>\n#11 0x56278e7ebcae <unknown>\n#12 0x56278e7ef8fe <unknown>\n#13 0x56278e7f8f20 <unknown>\n#14 0x56278e7f0923 <unknown>\n#15 0x56278e7c3c0e <unknown>\n#16 0x56278e813b08 <unknown>\n#17 0x56278e813c97 <unknown>\n#18 0x56278e824113 <unknown>\n#19 0x7fd6776f6b43 <unknown>","statusTrace":"newSelf = <test_header.TestHeader object at 0x7f2b613527f0>\n\n    def wrapper(newSelf):\n        self.render_page()\n>       func(newSelf)\n\nhw/code/ui/pages/base_page.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhw/code/test_header.py:19: in test_header_profile_button\n    self.header.findLoginPageButton().click()\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2b626f2040>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x56278e813c97 \\\\u003Cunknown>\\\\n#18 0x56278e824113 \\\\u003Cunknown>\\\\n#19 0x7fd6776f6b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=113.0.5672.63)\nE       Stacktrace:\nE       #0 0x56278e82c133 <unknown>\nE       #1 0x56278e560966 <unknown>\nE       #2 0x56278e59e5b6 <unknown>\nE       #3 0x56278e5933ea <unknown>\nE       #4 0x56278e5bcbd2 <unknown>\nE       #5 0x56278e592d13 <unknown>\nE       #6 0x56278e5bcd9e <unknown>\nE       #7 0x56278e5d51c7 <unknown>\nE       #8 0x56278e5bc9a3 <unknown>\nE       #9 0x56278e59146a <unknown>\nE       #10 0x56278e59255e <unknown>\nE       #11 0x56278e7ebcae <unknown>\nE       #12 0x56278e7ef8fe <unknown>\nE       #13 0x56278e7f8f20 <unknown>\nE       #14 0x56278e7f0923 <unknown>\nE       #15 0x56278e7c3c0e <unknown>\nE       #16 0x56278e813b08 <unknown>\nE       #17 0x56278e813c97 <unknown>\nE       #18 0x56278e824113 <unknown>\nE       #19 0x7fd6776f6b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x56278e82c133 <unknown>\n#1 0x56278e560966 <unknown>\n#2 0x56278e59e5b6 <unknown>\n#3 0x56278e5933ea <unknown>\n#4 0x56278e5bcbd2 <unknown>\n#5 0x56278e592d13 <unknown>\n#6 0x56278e5bcd9e <unknown>\n#7 0x56278e5d51c7 <unknown>\n#8 0x56278e5bc9a3 <unknown>\n#9 0x56278e59146a <unknown>\n#10 0x56278e59255e <unknown>\n#11 0x56278e7ebcae <unknown>\n#12 0x56278e7ef8fe <unknown>\n#13 0x56278e7f8f20 <unknown>\n#14 0x56278e7f0923 <unknown>\n#15 0x56278e7c3c0e <unknown>\n#16 0x56278e813b08 <unknown>\n#17 0x56278e813c97 <unknown>\n#18 0x56278e824113 <unknown>\n#19 0x7fd6776f6b43 <unknown>","statusTrace":"newSelf = <test_header.TestHeader object at 0x7f2b613527f0>\n\n    def wrapper(newSelf):\n        self.render_page()\n>       func(newSelf)\n\nhw/code/ui/pages/base_page.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhw/code/test_header.py:19: in test_header_profile_button\n    self.header.findLoginPageButton().click()\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2b626f2040>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x56278e813c97 \\\\u003Cunknown>\\\\n#18 0x56278e824113 \\\\u003Cunknown>\\\\n#19 0x7fd6776f6b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=113.0.5672.63)\nE       Stacktrace:\nE       #0 0x56278e82c133 <unknown>\nE       #1 0x56278e560966 <unknown>\nE       #2 0x56278e59e5b6 <unknown>\nE       #3 0x56278e5933ea <unknown>\nE       #4 0x56278e5bcbd2 <unknown>\nE       #5 0x56278e592d13 <unknown>\nE       #6 0x56278e5bcd9e <unknown>\nE       #7 0x56278e5d51c7 <unknown>\nE       #8 0x56278e5bc9a3 <unknown>\nE       #9 0x56278e59146a <unknown>\nE       #10 0x56278e59255e <unknown>\nE       #11 0x56278e7ebcae <unknown>\nE       #12 0x56278e7ef8fe <unknown>\nE       #13 0x56278e7f8f20 <unknown>\nE       #14 0x56278e7f0923 <unknown>\nE       #15 0x56278e7c3c0e <unknown>\nE       #16 0x56278e813b08 <unknown>\nE       #17 0x56278e813c97 <unknown>\nE       #18 0x56278e824113 <unknown>\nE       #19 0x7fd6776f6b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"findLoginPageButton","time":{"start":1683813635820,"stop":1683813635853,"duration":33},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x56278e82c133 <unknown>\n#1 0x56278e560966 <unknown>\n#2 0x56278e59e5b6 <unknown>\n#3 0x56278e5933ea <unknown>\n#4 0x56278e5bcbd2 <unknown>\n#5 0x56278e592d13 <unknown>\n#6 0x56278e5bcd9e <unknown>\n#7 0x56278e5d51c7 <unknown>\n#8 0x56278e5bc9a3 <unknown>\n#9 0x56278e59146a <unknown>\n#10 0x56278e59255e <unknown>\n#11 0x56278e7ebcae <unknown>\n#12 0x56278e7ef8fe <unknown>\n#13 0x56278e7f8f20 <unknown>\n#14 0x56278e7f0923 <unknown>\n#15 0x56278e7c3c0e <unknown>\n#16 0x56278e813b08 <unknown>\n#17 0x56278e813c97 <unknown>\n#18 0x56278e824113 <unknown>\n#19 0x7fd6776f6b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/test_header.py\", line 19, in test_header_profile_button\n    self.header.findLoginPageButton().click()\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Tests login / profile button"},{"name":"story","value":"Login and find profile button, then logout"},{"name":"parentSuite","value":"hw.code"},{"name":"suite","value":"test_header"},{"name":"subSuite","value":"TestHeader"},{"name":"host","value":"fv-az436-226"},{"name":"thread","value":"3792-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"hw.code.test_header"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":8,"unknown":0,"total":13},"items":[{"uid":"b9a56188ac20b766","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/35//#testresult/b9a56188ac20b766","status":"passed","time":{"start":1683813371361,"stop":1683813375456,"duration":4095}},{"uid":"37e7a0acfee0123","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/34//#testresult/37e7a0acfee0123","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x55b315127133 <unknown>\n#1 0x55b314e5b966 <unknown>\n#2 0x55b314e995b6 <unknown>\n#3 0x55b314e8e3ea <unknown>\n#4 0x55b314eb7bd2 <unknown>\n#5 0x55b314e8dd13 <unknown>\n#6 0x55b314eb7d9e <unknown>\n#7 0x55b314ed01c7 <unknown>\n#8 0x55b314eb79a3 <unknown>\n#9 0x55b314e8c46a <unknown>\n#10 0x55b314e8d55e <unknown>\n#11 0x55b3150e6cae <unknown>\n#12 0x55b3150ea8fe <unknown>\n#13 0x55b3150f3f20 <unknown>\n#14 0x55b3150eb923 <unknown>\n#15 0x55b3150bec0e <unknown>\n#16 0x55b31510eb08 <unknown>\n#17 0x55b31510ec97 <unknown>\n#18 0x55b31511f113 <unknown>\n#19 0x7efd33c76b43 <unknown>","time":{"start":1683801849535,"stop":1683801851360,"duration":1825}},{"uid":"9f270b5b82d4cdb","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/33//#testresult/9f270b5b82d4cdb","status":"passed","time":{"start":1683801739793,"stop":1683801743347,"duration":3554}},{"uid":"8ed994b7b0405ee1","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/31//#testresult/8ed994b7b0405ee1","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x564968d96133 <unknown>\n#1 0x564968aca966 <unknown>\n#2 0x564968b085b6 <unknown>\n#3 0x564968afd3ea <unknown>\n#4 0x564968b26bd2 <unknown>\n#5 0x564968afcd13 <unknown>\n#6 0x564968b26d9e <unknown>\n#7 0x564968b3f1c7 <unknown>\n#8 0x564968b269a3 <unknown>\n#9 0x564968afb46a <unknown>\n#10 0x564968afc55e <unknown>\n#11 0x564968d55cae <unknown>\n#12 0x564968d598fe <unknown>\n#13 0x564968d62f20 <unknown>\n#14 0x564968d5a923 <unknown>\n#15 0x564968d2dc0e <unknown>\n#16 0x564968d7db08 <unknown>\n#17 0x564968d7dc97 <unknown>\n#18 0x564968d8e113 <unknown>\n#19 0x7faef1b56b43 <unknown>","time":{"start":1683797572200,"stop":1683797573928,"duration":1728}},{"uid":"9e44d58a54134b91","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/32//#testresult/9e44d58a54134b91","status":"passed","time":{"start":1683797553090,"stop":1683797556942,"duration":3852}},{"uid":"f8a92cfd4b050e9a","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/29//#testresult/f8a92cfd4b050e9a","status":"passed","time":{"start":1683794120756,"stop":1683794124258,"duration":3502}},{"uid":"a498df75b25bb8a4","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/28//#testresult/a498df75b25bb8a4","status":"passed","time":{"start":1683794102539,"stop":1683794106181,"duration":3642}},{"uid":"b0b1c07d127f0740","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/27//#testresult/b0b1c07d127f0740","status":"passed","time":{"start":1683775628096,"stop":1683775631435,"duration":3339}},{"uid":"dfd13ef1a0d7670e","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/26//#testresult/dfd13ef1a0d7670e","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x55c2f52d4133 <unknown>\n#1 0x55c2f5008966 <unknown>\n#2 0x55c2f50465b6 <unknown>\n#3 0x55c2f503b3ea <unknown>\n#4 0x55c2f5064bd2 <unknown>\n#5 0x55c2f503ad13 <unknown>\n#6 0x55c2f5064d9e <unknown>\n#7 0x55c2f507d1c7 <unknown>\n#8 0x55c2f50649a3 <unknown>\n#9 0x55c2f503946a <unknown>\n#10 0x55c2f503a55e <unknown>\n#11 0x55c2f5293cae <unknown>\n#12 0x55c2f52978fe <unknown>\n#13 0x55c2f52a0f20 <unknown>\n#14 0x55c2f5298923 <unknown>\n#15 0x55c2f526bc0e <unknown>\n#16 0x55c2f52bbb08 <unknown>\n#17 0x55c2f52bbc97 <unknown>\n#18 0x55c2f52cc113 <unknown>\n#19 0x7f2d52898b43 <unknown>","time":{"start":1683775606496,"stop":1683775607907,"duration":1411}},{"uid":"c77ace07e03b4275","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/25//#testresult/c77ace07e03b4275","status":"passed","time":{"start":1683749782959,"stop":1683749786606,"duration":3647}},{"uid":"c44d4dc6d1135ca2","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/24//#testresult/c44d4dc6d1135ca2","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=112.0.5615.165)\nStacktrace:\n#0 0x55cff20c2fe3 <unknown>\n#1 0x55cff1e01d36 <unknown>\n#2 0x55cff1e3fef9 <unknown>\n#3 0x55cff1e340c5 <unknown>\n#4 0x55cff1e5f8c2 <unknown>\n#5 0x55cff1e33943 <unknown>\n#6 0x55cff1e5fa8e <unknown>\n#7 0x55cff1e78232 <unknown>\n#8 0x55cff1e5f693 <unknown>\n#9 0x55cff1e3203a <unknown>\n#10 0x55cff1e3317e <unknown>\n#11 0x55cff2084dbd <unknown>\n#12 0x55cff2088c6c <unknown>\n#13 0x55cff20924b0 <unknown>\n#14 0x55cff2089d63 <unknown>\n#15 0x55cff205cc35 <unknown>\n#16 0x55cff20ad138 <unknown>\n#17 0x55cff20ad2c7 <unknown>\n#18 0x55cff20bb093 <unknown>\n#19 0x7fdcc0f74b43 <unknown>","time":{"start":1683749325214,"stop":1683749326646,"duration":1432}},{"uid":"922f2aef8e3ee03","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/23//#testresult/922f2aef8e3ee03","status":"passed","time":{"start":1683638304082,"stop":1683638309645,"duration":5563}}]},"tags":[]},"source":"332165a13748d14c.json","parameterValues":[]}