{"uid":"cade3aa6a41206ba","name":"test_change_password_incorrect_empty_str","fullName":"hw.code.test_profile.TestProfile#test_change_password_incorrect_empty_str","historyId":"18330349d3d013f3bd93e8069d02b4c8","time":{"start":1683815065356,"stop":1683815065356,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nfrom no such execution context: loader has changed while resolving nodes\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x55d4bb577133 <unknown>\n#1 0x55d4bb2ab966 <unknown>\n#2 0x55d4bb2af0b9 <unknown>\n#3 0x55d4bb2b156e <unknown>\n#4 0x55d4bb2b163c <unknown>\n#5 0x55d4bb311aad <unknown>\n#6 0x55d4bb31018f <unknown>\n#7 0x55d4bb3079a3 <unknown>\n#8 0x55d4bb2dc46a <unknown>\n#9 0x55d4bb2dd55e <unknown>\n#10 0x55d4bb536cae <unknown>\n#11 0x55d4bb53a8fe <unknown>\n#12 0x55d4bb543f20 <unknown>\n#13 0x55d4bb53b923 <unknown>\n#14 0x55d4bb50ec0e <unknown>\n#15 0x55d4bb55eb08 <unknown>\n#16 0x55d4bb55ec97 <unknown>\n#17 0x55d4bb56f113 <unknown>\n#18 0x7f3304a1eb43 <unknown>","statusTrace":"browser_config = 'chrome'\n\n    @pytest.fixture()\n    def driver(browser_config):\n>       driver = get_driver(browser_config)\n\nhw/code/ui/fixtures.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhw/code/ui/fixtures.py:40: in get_driver\n    browser = webdriver.Chrome(\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py:84: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py:104: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:286: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:378: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4a7c6286d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created\\\\nfrom no such execut...\\\\n#16 0x55d4bb55ec97 \\\\u003Cunknown>\\\\n#17 0x55d4bb56f113 \\\\u003Cunknown>\\\\n#18 0x7f3304a1eb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nE       from no such execution context: loader has changed while resolving nodes\nE         (Session info: chrome=113.0.5672.63)\nE       Stacktrace:\nE       #0 0x55d4bb577133 <unknown>\nE       #1 0x55d4bb2ab966 <unknown>\nE       #2 0x55d4bb2af0b9 <unknown>\nE       #3 0x55d4bb2b156e <unknown>\nE       #4 0x55d4bb2b163c <unknown>\nE       #5 0x55d4bb311aad <unknown>\nE       #6 0x55d4bb31018f <unknown>\nE       #7 0x55d4bb3079a3 <unknown>\nE       #8 0x55d4bb2dc46a <unknown>\nE       #9 0x55d4bb2dd55e <unknown>\nE       #10 0x55d4bb536cae <unknown>\nE       #11 0x55d4bb53a8fe <unknown>\nE       #12 0x55d4bb543f20 <unknown>\nE       #13 0x55d4bb53b923 <unknown>\nE       #14 0x55d4bb50ec0e <unknown>\nE       #15 0x55d4bb55eb08 <unknown>\nE       #16 0x55d4bb55ec97 <unknown>\nE       #17 0x55d4bb56f113 <unknown>\nE       #18 0x7f3304a1eb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:245: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_config","time":{"start":1683814699107,"stop":1683814699107,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1683815065357,"stop":1683815067180,"duration":1823},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nfrom no such execution context: loader has changed while resolving nodes\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x55d4bb577133 <unknown>\n#1 0x55d4bb2ab966 <unknown>\n#2 0x55d4bb2af0b9 <unknown>\n#3 0x55d4bb2b156e <unknown>\n#4 0x55d4bb2b163c <unknown>\n#5 0x55d4bb311aad <unknown>\n#6 0x55d4bb31018f <unknown>\n#7 0x55d4bb3079a3 <unknown>\n#8 0x55d4bb2dc46a <unknown>\n#9 0x55d4bb2dd55e <unknown>\n#10 0x55d4bb536cae <unknown>\n#11 0x55d4bb53a8fe <unknown>\n#12 0x55d4bb543f20 <unknown>\n#13 0x55d4bb53b923 <unknown>\n#14 0x55d4bb50ec0e <unknown>\n#15 0x55d4bb55eb08 <unknown>\n#16 0x55d4bb55ec97 <unknown>\n#17 0x55d4bb56f113 <unknown>\n#18 0x7f3304a1eb43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1117, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 915, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/fixtures.py\", line 61, in driver\n    driver = get_driver(browser_config)\n  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/fixtures.py\", line 40, in get_driver\n    browser = webdriver.Chrome(\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py\", line 84, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py\", line 104, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 286, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 378, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},{"name":"setup","time":{"start":1683815068132,"stop":1683815069414,"duration":1282},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"hw.code"},{"name":"suite","value":"test_profile"},{"name":"subSuite","value":"TestProfile"},{"name":"host","value":"fv-az629-810"},{"name":"thread","value":"3857-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"hw.code.test_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":7},"items":[{"uid":"5a77bafcac849eea","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/41//#testresult/5a77bafcac849eea","status":"passed","time":{"start":1683814830721,"stop":1683814832457,"duration":1736}},{"uid":"44882c49ca758bfb","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/37//#testresult/44882c49ca758bfb","status":"passed","time":{"start":1683813803434,"stop":1683813805145,"duration":1711}},{"uid":"e4c2ab11eefa5729","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/36//#testresult/e4c2ab11eefa5729","status":"passed","time":{"start":1683813730087,"stop":1683813731813,"duration":1726}},{"uid":"27c309e1cc14c59","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/35//#testresult/27c309e1cc14c59","status":"passed","time":{"start":1683813493365,"stop":1683813495296,"duration":1931}},{"uid":"4e8093cda6994b29","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/34//#testresult/4e8093cda6994b29","status":"passed","time":{"start":1683801962340,"stop":1683801964340,"duration":2000}},{"uid":"dca97fd62838dc9","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/33//#testresult/dca97fd62838dc9","status":"passed","time":{"start":1683801830230,"stop":1683801831956,"duration":1726}}]},"tags":[]},"source":"cade3aa6a41206ba.json","parameterValues":[]}