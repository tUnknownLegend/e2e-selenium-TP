{"uid":"9c3a2a47776277ec","name":"test_searchTest","fullName":"hw.code.test_header.TestHeader#test_searchTest","historyId":"e286a38d861f2f2ab6c024634ef29e4e","time":{"start":1683775632279,"stop":1683775639197,"duration":6918},"status":"failed","statusMessage":"AssertionError","statusTrace":"newSelf = <test_header.TestHeader object at 0x7f4f0c15a8e0>\n\n    def wrapper(newSelf):\n        self.render_page()\n>       func(newSelf)\n\nhw/code/ui/pages/base_page.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhw/code/test_header.py:54: in test_searchTest\n    self.searchHeader.checkSearchSuggestions()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui.pages.search_header.SearchHeader object at 0x7f4f0c16b730>\n\n    def checkSearchSuggestions(self):\n        searchInput = self.find(self.locators.SEARCH_INPUT)\n        searchInput.clear()\n        searchInput.send_keys('iphone')\n    \n        thirdSearchSuggestion = self.find(\n            self.locators.GET_THIRD_SEARCH_SUGGESTION)\n    \n        thirdSuggestionText = thirdSearchSuggestion.get_attribute('innerText')\n        thirdSearchSuggestion.click()\n    \n>       assert self.getInnerText(\n            self.locators.FIND_FIRST_SEARCH_RESULT_TITLE\n        ) == thirdSuggestionText\nE       AssertionError\n\nhw/code/ui/pages/search_header.py:66: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"newSelf = <test_header.TestHeader object at 0x7f4f0c15a8e0>\n\n    def wrapper(newSelf):\n        self.render_page()\n>       func(newSelf)\n\nhw/code/ui/pages/base_page.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhw/code/test_header.py:54: in test_searchTest\n    self.searchHeader.checkSearchSuggestions()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ui.pages.search_header.SearchHeader object at 0x7f4f0c16b730>\n\n    def checkSearchSuggestions(self):\n        searchInput = self.find(self.locators.SEARCH_INPUT)\n        searchInput.clear()\n        searchInput.send_keys('iphone')\n    \n        thirdSearchSuggestion = self.find(\n            self.locators.GET_THIRD_SEARCH_SUGGESTION)\n    \n        thirdSuggestionText = thirdSearchSuggestion.get_attribute('innerText')\n        thirdSearchSuggestion.click()\n    \n>       assert self.getInnerText(\n            self.locators.FIND_FIRST_SEARCH_RESULT_TITLE\n        ) == thirdSuggestionText\nE       AssertionError\n\nhw/code/ui/pages/search_header.py:66: AssertionError","steps":[{"name":"checkPhoneCategory","time":{"start":1683775632482,"stop":1683775633165,"duration":683},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"checkProhibitedSymbolsSearch","time":{"start":1683775633165,"stop":1683775638530,"duration":5365},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"checkSearchSuggestions","time":{"start":1683775638530,"stop":1683775639197,"duration":667},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/test_header.py\", line 54, in test_searchTest\n    self.searchHeader.checkSearchSuggestions()\n  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/pages/search_header.py\", line 66, in checkSearchSuggestions\n    assert self.getInnerText(\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"different payloads for search and suggestions"},{"name":"feature","value":"Tests search"},{"name":"parentSuite","value":"hw.code"},{"name":"suite","value":"test_header"},{"name":"subSuite","value":"TestHeader"},{"name":"host","value":"fv-az444-279"},{"name":"thread","value":"3865-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"hw.code.test_header"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"d4ef4bddac33e148","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/26//#testresult/d4ef4bddac33e148","status":"failed","statusDetails":"AssertionError","time":{"start":1683775608889,"stop":1683775616400,"duration":7511}},{"uid":"4d0bb1c2133fe17d","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/25//#testresult/4d0bb1c2133fe17d","status":"failed","statusDetails":"AssertionError","time":{"start":1683749787604,"stop":1683749794902,"duration":7298}},{"uid":"fef3c12aeb33ba7f","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/24//#testresult/fef3c12aeb33ba7f","status":"failed","statusDetails":"AssertionError","time":{"start":1683749327573,"stop":1683749335317,"duration":7744}},{"uid":"876ff66459c14b96","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/23//#testresult/876ff66459c14b96","status":"failed","statusDetails":"AssertionError","time":{"start":1683638310466,"stop":1683638317599,"duration":7133}}]},"tags":[]},"source":"9c3a2a47776277ec.json","parameterValues":[]}