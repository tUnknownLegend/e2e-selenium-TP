{"uid":"4ae542a0d5aa9b28","name":"test_category_page_change_count","fullName":"hw.code.test_cart_count.TestChangeItemCountInCart#test_category_page_change_count","historyId":"1dc1075c4d930c29240888cb1e093cb6","time":{"start":1683826967495,"stop":1683826972353,"duration":4858},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: [object HTMLDivElement] has no size and location\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x55ff965b0133 <unknown>\n#1 0x55ff962e4966 <unknown>\n#2 0x55ff962e9126 <unknown>\n#3 0x55ff962ea56e <unknown>\n#4 0x55ff962ea63c <unknown>\n#5 0x55ff96326904 <unknown>\n#6 0x55ff96325f07 <unknown>\n#7 0x55ff963618ff <unknown>\n#8 0x55ff96340bd2 <unknown>\n#9 0x55ff963591c7 <unknown>\n#10 0x55ff963409a3 <unknown>\n#11 0x55ff9631546a <unknown>\n#12 0x55ff9631655e <unknown>\n#13 0x55ff9656fcae <unknown>\n#14 0x55ff965738fe <unknown>\n#15 0x55ff9657cf20 <unknown>\n#16 0x55ff96574923 <unknown>\n#17 0x55ff96547c0e <unknown>\n#18 0x55ff96597b08 <unknown>\n#19 0x55ff96597c97 <unknown>\n#20 0x55ff965a8113 <unknown>\n#21 0x7fefbd1a0b43 <unknown>","statusTrace":"self = <test_cart_count.TestChangeItemCountInCart object at 0x7fa7069d7880>\n\n    def test_category_page_change_count(self):\n        self.categoryPage.test_unauth_change_count_buttons()\n>       self.categoryPage.test_auth_change_count_buttons()\n\nhw/code/test_cart_count.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhw/code/ui/components/changeCartCountButton.py:55: in test_auth_change_count_buttons\n    self.cartCountChange.checkButtonLabel()\nhw/code/ui/pages/change_cart_count.py:13: in checkButtonLabel\n    self.scrollToElement(self.locators.GET_COUNT_CONTAINER)\nhw/code/ui/pages/change_cart_count.py:41: in scrollToElement\n    self.scrollToLocator(selector)\nhw/code/ui/pages/base_page.py:72: in scrollToLocator\n    self.actions.scroll_to_element(element).perform()\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/common/action_chains.py:73: in perform\n    self.w3c_actions.perform()\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/common/actions/action_builder.py:91: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa707d0dd00>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: [object HT...\\\\n#19 0x55ff96597c97 \\\\u003Cunknown>\\\\n#20 0x55ff965a8113 \\\\u003Cunknown>\\\\n#21 0x7fefbd1a0b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: [object HTMLDivElement] has no size and location\nE         (Session info: chrome=113.0.5672.63)\nE       Stacktrace:\nE       #0 0x55ff965b0133 <unknown>\nE       #1 0x55ff962e4966 <unknown>\nE       #2 0x55ff962e9126 <unknown>\nE       #3 0x55ff962ea56e <unknown>\nE       #4 0x55ff962ea63c <unknown>\nE       #5 0x55ff96326904 <unknown>\nE       #6 0x55ff96325f07 <unknown>\nE       #7 0x55ff963618ff <unknown>\nE       #8 0x55ff96340bd2 <unknown>\nE       #9 0x55ff963591c7 <unknown>\nE       #10 0x55ff963409a3 <unknown>\nE       #11 0x55ff9631546a <unknown>\nE       #12 0x55ff9631655e <unknown>\nE       #13 0x55ff9656fcae <unknown>\nE       #14 0x55ff965738fe <unknown>\nE       #15 0x55ff9657cf20 <unknown>\nE       #16 0x55ff96574923 <unknown>\nE       #17 0x55ff96547c0e <unknown>\nE       #18 0x55ff96597b08 <unknown>\nE       #19 0x55ff96597c97 <unknown>\nE       #20 0x55ff965a8113 <unknown>\nE       #21 0x7fefbd1a0b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: [object HTMLDivElement] has no size and location\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x55ff965b0133 <unknown>\n#1 0x55ff962e4966 <unknown>\n#2 0x55ff962e9126 <unknown>\n#3 0x55ff962ea56e <unknown>\n#4 0x55ff962ea63c <unknown>\n#5 0x55ff96326904 <unknown>\n#6 0x55ff96325f07 <unknown>\n#7 0x55ff963618ff <unknown>\n#8 0x55ff96340bd2 <unknown>\n#9 0x55ff963591c7 <unknown>\n#10 0x55ff963409a3 <unknown>\n#11 0x55ff9631546a <unknown>\n#12 0x55ff9631655e <unknown>\n#13 0x55ff9656fcae <unknown>\n#14 0x55ff965738fe <unknown>\n#15 0x55ff9657cf20 <unknown>\n#16 0x55ff96574923 <unknown>\n#17 0x55ff96547c0e <unknown>\n#18 0x55ff96597b08 <unknown>\n#19 0x55ff96597c97 <unknown>\n#20 0x55ff965a8113 <unknown>\n#21 0x7fefbd1a0b43 <unknown>","statusTrace":"self = <test_cart_count.TestChangeItemCountInCart object at 0x7fa7069d7880>\n\n    def test_category_page_change_count(self):\n        self.categoryPage.test_unauth_change_count_buttons()\n>       self.categoryPage.test_auth_change_count_buttons()\n\nhw/code/test_cart_count.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhw/code/ui/components/changeCartCountButton.py:55: in test_auth_change_count_buttons\n    self.cartCountChange.checkButtonLabel()\nhw/code/ui/pages/change_cart_count.py:13: in checkButtonLabel\n    self.scrollToElement(self.locators.GET_COUNT_CONTAINER)\nhw/code/ui/pages/change_cart_count.py:41: in scrollToElement\n    self.scrollToLocator(selector)\nhw/code/ui/pages/base_page.py:72: in scrollToLocator\n    self.actions.scroll_to_element(element).perform()\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/common/action_chains.py:73: in perform\n    self.w3c_actions.perform()\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/common/actions/action_builder.py:91: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa707d0dd00>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: [object HT...\\\\n#19 0x55ff96597c97 \\\\u003Cunknown>\\\\n#20 0x55ff965a8113 \\\\u003Cunknown>\\\\n#21 0x7fefbd1a0b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: [object HTMLDivElement] has no size and location\nE         (Session info: chrome=113.0.5672.63)\nE       Stacktrace:\nE       #0 0x55ff965b0133 <unknown>\nE       #1 0x55ff962e4966 <unknown>\nE       #2 0x55ff962e9126 <unknown>\nE       #3 0x55ff962ea56e <unknown>\nE       #4 0x55ff962ea63c <unknown>\nE       #5 0x55ff96326904 <unknown>\nE       #6 0x55ff96325f07 <unknown>\nE       #7 0x55ff963618ff <unknown>\nE       #8 0x55ff96340bd2 <unknown>\nE       #9 0x55ff963591c7 <unknown>\nE       #10 0x55ff963409a3 <unknown>\nE       #11 0x55ff9631546a <unknown>\nE       #12 0x55ff9631655e <unknown>\nE       #13 0x55ff9656fcae <unknown>\nE       #14 0x55ff965738fe <unknown>\nE       #15 0x55ff9657cf20 <unknown>\nE       #16 0x55ff96574923 <unknown>\nE       #17 0x55ff96547c0e <unknown>\nE       #18 0x55ff96597b08 <unknown>\nE       #19 0x55ff96597c97 <unknown>\nE       #20 0x55ff965a8113 <unknown>\nE       #21 0x7fefbd1a0b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"initial checkButtonLabel","time":{"start":1683826967744,"stop":1683826968325,"duration":581},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"initially adds item to cart","time":{"start":1683826968325,"stop":1683826968495,"duration":170},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"addes one more item to cart","time":{"start":1683826968495,"stop":1683826968639,"duration":144},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"removes items from cart","time":{"start":1683826968639,"stop":1683826968831,"duration":192},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"checks if item successfully deleted from cart","time":{"start":1683826968831,"stop":1683826968903,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"login","time":{"start":1683826969147,"stop":1683826971212,"duration":2065},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"go back to page page","time":{"start":1683826971212,"stop":1683826971294,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"initial checkButtonLabel","time":{"start":1683826971294,"stop":1683826972352,"duration":1058},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: [object HTMLDivElement] has no size and location\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x55ff965b0133 <unknown>\n#1 0x55ff962e4966 <unknown>\n#2 0x55ff962e9126 <unknown>\n#3 0x55ff962ea56e <unknown>\n#4 0x55ff962ea63c <unknown>\n#5 0x55ff96326904 <unknown>\n#6 0x55ff96325f07 <unknown>\n#7 0x55ff963618ff <unknown>\n#8 0x55ff96340bd2 <unknown>\n#9 0x55ff963591c7 <unknown>\n#10 0x55ff963409a3 <unknown>\n#11 0x55ff9631546a <unknown>\n#12 0x55ff9631655e <unknown>\n#13 0x55ff9656fcae <unknown>\n#14 0x55ff965738fe <unknown>\n#15 0x55ff9657cf20 <unknown>\n#16 0x55ff96574923 <unknown>\n#17 0x55ff96547c0e <unknown>\n#18 0x55ff96597b08 <unknown>\n#19 0x55ff96597c97 <unknown>\n#20 0x55ff965a8113 <unknown>\n#21 0x7fefbd1a0b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/components/changeCartCountButton.py\", line 55, in test_auth_change_count_buttons\n    self.cartCountChange.checkButtonLabel()\n  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/pages/change_cart_count.py\", line 13, in checkButtonLabel\n    self.scrollToElement(self.locators.GET_COUNT_CONTAINER)\n  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/pages/change_cart_count.py\", line 41, in scrollToElement\n    self.scrollToLocator(selector)\n  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/pages/base_page.py\", line 72, in scrollToLocator\n    self.actions.scroll_to_element(element).perform()\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/common/action_chains.py\", line 73, in perform\n    self.w3c_actions.perform()\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 91, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":8,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"hw.code"},{"name":"suite","value":"test_cart_count"},{"name":"subSuite","value":"TestChangeItemCountInCart"},{"name":"host","value":"fv-az577-103"},{"name":"thread","value":"3869-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"hw.code.test_cart_count"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":15,"unknown":0,"total":20},"items":[{"uid":"61c97bc0cf873a1b","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/48//#testresult/61c97bc0cf873a1b","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: [object HTMLDivElement] has no size and location\n  (Session info: chrome=113.0.5672.63)\nStacktrace:\n#0 0x56234fc9e133 <unknown>\n#1 0x56234f9d2966 <unknown>\n#2 0x56234f9d7126 <unknown>\n#3 0x56234f9d856e <unknown>\n#4 0x56234f9d863c <unknown>\n#5 0x56234fa14904 <unknown>\n#6 0x56234fa13f07 <unknown>\n#7 0x56234fa4f8ff <unknown>\n#8 0x56234fa2ebd2 <unknown>\n#9 0x56234fa471c7 <unknown>\n#10 0x56234fa2e9a3 <unknown>\n#11 0x56234fa0346a <unknown>\n#12 0x56234fa0455e <unknown>\n#13 0x56234fc5dcae <unknown>\n#14 0x56234fc618fe <unknown>\n#15 0x56234fc6af20 <unknown>\n#16 0x56234fc62923 <unknown>\n#17 0x56234fc35c0e <unknown>\n#18 0x56234fc85b08 <unknown>\n#19 0x56234fc85c97 <unknown>\n#20 0x56234fc96113 <unknown>\n#21 0x7f11ddcb2b43 <unknown>","time":{"start":1683826179965,"stop":1683826180689,"duration":724}},{"uid":"a704f0a31e57bbe6","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/47//#testresult/a704f0a31e57bbe6","status":"passed","time":{"start":1683826018382,"stop":1683826027284,"duration":8902}},{"uid":"d739508e927691a6","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/46//#testresult/d739508e927691a6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1683819786718,"stop":1683819796053,"duration":9335}},{"uid":"163e8f4f3d0569c7","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/45//#testresult/163e8f4f3d0569c7","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1683815869077,"stop":1683815877653,"duration":8576}},{"uid":"b059e4510358be43","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/44//#testresult/b059e4510358be43","status":"passed","time":{"start":1683815655812,"stop":1683815662661,"duration":6849}},{"uid":"aa0043507abf5b8e","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/43//#testresult/aa0043507abf5b8e","status":"passed","time":{"start":1683815007285,"stop":1683815016270,"duration":8985}},{"uid":"af465375fe8a5a01","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/42//#testresult/af465375fe8a5a01","status":"passed","time":{"start":1683814890875,"stop":1683814896895,"duration":6020}},{"uid":"4e9cd6dc16e56aab","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/41//#testresult/4e9cd6dc16e56aab","status":"passed","time":{"start":1683814644419,"stop":1683814651722,"duration":7303}},{"uid":"9916d4b0a57a9af3","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/37//#testresult/9916d4b0a57a9af3","status":"passed","time":{"start":1683813626408,"stop":1683813633156,"duration":6748}},{"uid":"614b1a6091f8cd0f","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/36//#testresult/614b1a6091f8cd0f","status":"passed","time":{"start":1683813561782,"stop":1683813568430,"duration":6648}},{"uid":"d8e5861fe681d797","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/35//#testresult/d8e5861fe681d797","status":"passed","time":{"start":1683813281921,"stop":1683813290723,"duration":8802}},{"uid":"32f87351f5d292b2","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/34//#testresult/32f87351f5d292b2","status":"passed","time":{"start":1683801755058,"stop":1683801764473,"duration":9415}},{"uid":"3326e7489acd7026","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/33//#testresult/3326e7489acd7026","status":"passed","time":{"start":1683801662957,"stop":1683801669816,"duration":6859}},{"uid":"9ace4ba53d80bb25","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/31//#testresult/9ace4ba53d80bb25","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1683797492189,"stop":1683797498874,"duration":6685}},{"uid":"8dcecc9ca67b5d58","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/32//#testresult/8dcecc9ca67b5d58","status":"passed","time":{"start":1683797474274,"stop":1683797481367,"duration":7093}},{"uid":"5ee52ba7b9bb3d25","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/29//#testresult/5ee52ba7b9bb3d25","status":"passed","time":{"start":1683794046879,"stop":1683794053435,"duration":6556}},{"uid":"d682563a3769065","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/28//#testresult/d682563a3769065","status":"passed","time":{"start":1683794027203,"stop":1683794033978,"duration":6775}},{"uid":"60264c5fdace11e8","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/27//#testresult/60264c5fdace11e8","status":"passed","time":{"start":1683775557525,"stop":1683775563488,"duration":5963}},{"uid":"1dbbb3553d2858cf","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/26//#testresult/1dbbb3553d2858cf","status":"passed","time":{"start":1683775526434,"stop":1683775533376,"duration":6942}}]},"tags":[]},"source":"4ae542a0d5aa9b28.json","parameterValues":[]}