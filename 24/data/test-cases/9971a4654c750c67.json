{"uid":"9971a4654c750c67","name":"test_home_page_change_count","fullName":"hw.code.test_cart_count.TestChangeItemCountInCart#test_home_page_change_count","historyId":"2efe1d4bfd04f4b19d8e282135ce5227","time":{"start":1683749305934,"stop":1683749312918,"duration":6984},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_cart_count.TestChangeItemCountInCart object at 0x7fdc6198ae80>\n\n    def test_home_page_change_count(self):\n>       self.homePage.test_unauth_change_count_buttons()\n\nhw/code/test_cart_count.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhw/code/ui/components/changeCartCountButton.py:27: in test_unauth_change_count_buttons\n    self.cartCountChange.checkNumberOfItemsInCart(1)\nhw/code/ui/pages/change_cart_count.py:36: in checkNumberOfItemsInCart\n    assert int(self.getCountOfItemInCart()) == number\nhw/code/ui/pages/change_cart_count.py:28: in getCountOfItemInCart\n    self.waitUntilClickableElement(self.locators.GET_MINUS_BUTTON)\nhw/code/ui/pages/base_page.py:89: in waitUntilClickableElement\n    self.wait(timeout).until(EC.element_to_be_clickable(selector))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"74fb860d5f9defbf58d0b5dc273d4e34\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fdc619ed040>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_cart_count.TestChangeItemCountInCart object at 0x7fdc6198ae80>\n\n    def test_home_page_change_count(self):\n>       self.homePage.test_unauth_change_count_buttons()\n\nhw/code/test_cart_count.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhw/code/ui/components/changeCartCountButton.py:27: in test_unauth_change_count_buttons\n    self.cartCountChange.checkNumberOfItemsInCart(1)\nhw/code/ui/pages/change_cart_count.py:36: in checkNumberOfItemsInCart\n    assert int(self.getCountOfItemInCart()) == number\nhw/code/ui/pages/change_cart_count.py:28: in getCountOfItemInCart\n    self.waitUntilClickableElement(self.locators.GET_MINUS_BUTTON)\nhw/code/ui/pages/base_page.py:89: in waitUntilClickableElement\n    self.wait(timeout).until(EC.element_to_be_clickable(selector))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"74fb860d5f9defbf58d0b5dc273d4e34\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fdc619ed040>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"initial checkButtonLabel","time":{"start":1683749306214,"stop":1683749307470,"duration":1256},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"initially adds item to cart","time":{"start":1683749307470,"stop":1683749312917,"duration":5447},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/components/changeCartCountButton.py\", line 27, in test_unauth_change_count_buttons\n    self.cartCountChange.checkNumberOfItemsInCart(1)\n  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/pages/change_cart_count.py\", line 36, in checkNumberOfItemsInCart\n    assert int(self.getCountOfItemInCart()) == number\n  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/pages/change_cart_count.py\", line 28, in getCountOfItemInCart\n    self.waitUntilClickableElement(self.locators.GET_MINUS_BUTTON)\n  File \"/home/runner/work/e2e-selenium-TP/e2e-selenium-TP/hw/code/ui/pages/base_page.py\", line 89, in waitUntilClickableElement\n    self.wait(timeout).until(EC.element_to_be_clickable(selector))\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"hw.code"},{"name":"suite","value":"test_cart_count"},{"name":"subSuite","value":"TestChangeItemCountInCart"},{"name":"host","value":"fv-az612-539"},{"name":"thread","value":"3846-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"hw.code.test_cart_count"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"1cdb7909a369ba24","reportUrl":"https://tUnknownLegend.github.io/e2e-selenium-TP/23//#testresult/1cdb7909a369ba24","status":"passed","time":{"start":1683638275275,"stop":1683638282205,"duration":6930}}]},"tags":[]},"source":"9971a4654c750c67.json","parameterValues":[]}